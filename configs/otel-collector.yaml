receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
        # tls_settings:  # communication encryption
        #   cert_file: /etc/otel/certs/server.crt
        #   key_file: /etc/otel/certs/server.key

        #   client_ca_file: /etc/otel/certs/ca.crt
        #   client_auth: require_and_verify_client_cert
      http:
        endpoint: "0.0.0.0:4318"
        # tls_settings:
        #   cert_file: /etc/otel/certs/server.crt
        #   key_file: /etc/otel/certs/server.key

processors:
  batch:
  # attributes:
  #   actions:
  #       - key: http.request.header.authorization
  #         action: delete  # redact sensitive headers
  #       - key: user.email
  #         action: delete  # remove user email PII

exporters:
  otlp/jaeger:
    endpoint: "jaeger:4317"
    # tls:  # encrypt outgoing data
    #   ca_file: /etc/otel/certs/backend-ca.crt
    #   cert_file: /etc/otel/certs/client.crt
    #   key_file: /etc/otel/certs/client.key

  prometheus:
    endpoint: "0.0.0.0:9090"
    # password: "${PROMETHEUS_PASSWORD}"

  elasticsearch:
    endpoints: [https://elasticsearch:9200]
    user: "elastic"
    password: "${ELASTIC_PASSWORD}"
    logs_index: "otel-logs-%{+yyyy.MM.dd}"
    tls:
      ca_file: /etc/otelcol-contrib/certs/ca/ca.crt

  debug:
    verbosity: detailed

# extensions:
#   # avoid including high-permission extensions
#   h_check:
#   basicauth/client: # enable authentication
#     # store credentials as environment variables
#     client_auth:
#       username: "${OTEL_USERNAME}"
#       password: "${OTEL_PASSWORD}"

#   extensions: [health_check, basicauth/client]

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/jaeger, debug]

    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus, debug]

    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [elasticsearch, debug]
