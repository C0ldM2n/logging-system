extensions:
  basicauth/server:
    htpasswd:
      inline: |
        ${OTEL_USERNAME}:${OTEL_PASSWORD}

  health_check:

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        auth:
          authenticator: basicauth/server
      http:
        endpoint: 0.0.0.0:4318
        auth:
          authenticator: basicauth/server

processors:
  batch:

  attributes/logs_enrich:
    actions:
      - key: service.name
        value: ${SERVICE_NAME}
        action: upsert
      - key: deployment.environment
        value: ${ENVIRONMENT}
        action: upsert
      - key: data_stream.type
        value: logs
        action: upsert
      - key: data_stream.dataset
        value: app.${SERVICE_NAME}   # segmentation by service
        action: upsert
      - key: data_stream.namespace
        value: ${ENVIRONMENT}
        action: upsert

exporters:
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  prometheus:
    endpoint: 0.0.0.0:9464

  elasticsearch:
    endpoint: ${ES_URL}
    auth:
      user: otlp_writer
      password: ${ES_PASSWORD}
    tls:
      ca_file: /etc/otelcol-contrib/ca.crt
    mapping:
      mode: otel

    # stability/performance
    sending_queue:
      enabled: true
      queue_size: 8192         # for start; increase at peaks
      num_consumers: 4         # 2â€“4 usually enough
    retry_on_failure:
      enabled: true

  debug:
    verbosity: detailed

service:
  extensions: [health_check, basicauth/server]

  telemetry:
      metrics:
        address: 0.0.0.0:8888

  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/jaeger, debug]

    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus, debug]

    logs:
      receivers: [otlp]
      processors: [attributes/logs_enrich, batch]
      exporters: [elasticsearch, debug]
